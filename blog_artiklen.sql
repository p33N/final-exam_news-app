-- MySQL Script generated by MySQL Workbench
-- Mon Apr  4 11:22:55 2022
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema dev-database
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema dev-database
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `dev-database` DEFAULT CHARACTER SET utf8 ;
USE `dev-database` ;

-- -----------------------------------------------------
-- Table `dev-database`.`Email`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `dev-database`.`Email` (
  `email` VARCHAR(45) NULL,
  `activated` TINYINT NULL,
  `news_signup` TINYINT NULL,
  `id` INT NOT NULL AUTO_INCREMENT,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `email_UNIQUE` (`email` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dev-database`.`Users`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `dev-database`.`Users` (
  `name` VARCHAR(100) NULL,
  `Email_id` INT NOT NULL,
  `about` TEXT(255) NULL,
  `subscribtion` TINYINT NULL,
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `Follows_id_UNIQUE` (`Follows_id` ASC) VISIBLE,
  INDEX `fk_Users_Email1_idx` (`Email_id` ASC) VISIBLE,
  UNIQUE INDEX `Email_id_UNIQUE` (`Email_id` ASC) VISIBLE,
  CONSTRAINT `fk_Users_Email1`
    FOREIGN KEY (`Email_id`)
    REFERENCES `dev-database`.`Email` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dev-database`.`Articles`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `dev-database`.`Articles` (
  `headline` VARCHAR(45) NULL,
  `picture` TEXT(255) NULL,
  `content` TEXT(255) NULL,
  `likes` INT(255) NULL,
  `tags` INT(11) NULL,
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  `Users_id` INT(11) NOT NULL,
  PRIMARY KEY (`id`, `Users_id`),
  INDEX `fk_Articles_Users1_idx` (`Users_id` ASC) VISIBLE,
  CONSTRAINT `fk_Articles_Users1`
    FOREIGN KEY (`Users_id`)
    REFERENCES `dev-database`.`Users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dev-database`.`Tags`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `dev-database`.`Tags` (
  `name` VARCHAR(45) NULL,
  `id` INT NOT NULL AUTO_INCREMENT,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dev-database`.`Tags_has_Articles`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `dev-database`.`Tags_has_Articles` (
  `Tags_id` INT NOT NULL,
  `Articles_id` INT(11) NOT NULL,
  PRIMARY KEY (`Tags_id`, `Articles_id`),
  INDEX `fk_Tags_has_Articles_Articles1_idx` (`Articles_id` ASC) VISIBLE,
  INDEX `fk_Tags_has_Articles_Tags_idx` (`Tags_id` ASC) VISIBLE,
  CONSTRAINT `fk_Tags_has_Articles_Tags`
    FOREIGN KEY (`Tags_id`)
    REFERENCES `dev-database`.`Tags` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Tags_has_Articles_Articles1`
    FOREIGN KEY (`Articles_id`)
    REFERENCES `dev-database`.`Articles` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dev-database`.`Comments`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `dev-database`.`Comments` (
  `Users_id` INT(11) NOT NULL,
  `Articles_id` INT(11) NOT NULL,
  `Articles_Users_id` INT(11) NOT NULL,
  `comment` TEXT(255) NULL,
  `id` INT NOT NULL AUTO_INCREMENT,
  PRIMARY KEY (`id`),
  INDEX `fk_Users_has_Articles_Articles1_idx` (`Articles_id` ASC, `Articles_Users_id` ASC) VISIBLE,
  INDEX `fk_Users_has_Articles_Users1_idx` (`Users_id` ASC) VISIBLE,
  CONSTRAINT `fk_Users_has_Articles_Users1`
    FOREIGN KEY (`Users_id`)
    REFERENCES `dev-database`.`Users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Users_has_Articles_Articles1`
    FOREIGN KEY (`Articles_id` , `Articles_Users_id`)
    REFERENCES `dev-database`.`Articles` (`id` , `Users_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dev-database`.`Follows`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `dev-database`.`Follows` (
  `following_id` INT(11) NOT NULL,
  `follows_id` INT(11) NOT NULL,
  `id` INT(11) NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_Follows_Users1_idx` (`following_id` ASC) VISIBLE,
  INDEX `fk_Follows_Users2_idx` (`follows_id` ASC) VISIBLE,
  CONSTRAINT `fk_Follows_Users1`
    FOREIGN KEY (`following_id`)
    REFERENCES `dev-database`.`Users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Follows_Users2`
    FOREIGN KEY (`follows_id`)
    REFERENCES `dev-database`.`Users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dev-database`.`bookmarks`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `dev-database`.`bookmarks` (
  `Users_id` INT(11) NOT NULL,
  `Articles_id` INT(11) NOT NULL,
  PRIMARY KEY (`Users_id`, `Articles_id`),
  INDEX `fk_Users_has_Articles_Articles2_idx` (`Articles_id` ASC) VISIBLE,
  INDEX `fk_Users_has_Articles_Users2_idx` (`Users_id` ASC) VISIBLE,
  CONSTRAINT `fk_Users_has_Articles_Users2`
    FOREIGN KEY (`Users_id`)
    REFERENCES `dev-database`.`Users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Users_has_Articles_Articles2`
    FOREIGN KEY (`Articles_id`)
    REFERENCES `dev-database`.`Articles` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dev-database`.`Replies`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `dev-database`.`Replies` (
  `Comments_id` INT NOT NULL,
  `reply_comment` VARCHAR(255) NULL,
  `Users_id` INT(11) NOT NULL,
  `id` INT NOT NULL AUTO_INCREMENT,
  PRIMARY KEY (`id`),
  INDEX `fk_Replies_Comments1_idx` (`Comments_id` ASC) VISIBLE,
  INDEX `fk_Replies_Users1_idx` (`Users_id` ASC) VISIBLE,
  CONSTRAINT `fk_Replies_Comments1`
    FOREIGN KEY (`Comments_id`)
    REFERENCES `dev-database`.`Comments` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Replies_Users1`
    FOREIGN KEY (`Users_id`)
    REFERENCES `dev-database`.`Users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dev-database`.`Likes`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `dev-database`.`Likes` (
  `Comments_id` INT NOT NULL,
  `Replies_id` INT NOT NULL,
  `Users_id` INT(11) NOT NULL,
  `id` INT NOT NULL AUTO_INCREMENT,
  PRIMARY KEY (`id`),
  INDEX `fk_Likes_Comments1_idx` (`Comments_id` ASC) VISIBLE,
  INDEX `fk_Likes_Replies1_idx` (`Replies_id` ASC) VISIBLE,
  INDEX `fk_Likes_Users1_idx` (`Users_id` ASC) VISIBLE,
  CONSTRAINT `fk_Likes_Comments1`
    FOREIGN KEY (`Comments_id`)
    REFERENCES `dev-database`.`Comments` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Likes_Replies1`
    FOREIGN KEY (`Replies_id`)
    REFERENCES `dev-database`.`Replies` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Likes_Users1`
    FOREIGN KEY (`Users_id`)
    REFERENCES `dev-database`.`Users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
